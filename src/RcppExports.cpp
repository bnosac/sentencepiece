// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// spc_train
std::string spc_train(std::string args);
RcppExport SEXP _sentencepiece_spc_train(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(spc_train(args));
    return rcpp_result_gen;
END_RCPP
}
// spc_load_model
Rcpp::List spc_load_model(std::string file);
RcppExport SEXP _sentencepiece_spc_load_model(SEXP fileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    rcpp_result_gen = Rcpp::wrap(spc_load_model(file));
    return rcpp_result_gen;
END_RCPP
}
// spc_encode_as_subwords
std::vector<std::vector<std::string>> spc_encode_as_subwords(SEXP model, const std::vector<std::string>& x);
RcppExport SEXP _sentencepiece_spc_encode_as_subwords(SEXP modelSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(spc_encode_as_subwords(model, x));
    return rcpp_result_gen;
END_RCPP
}
// spc_encode_as_ids
std::vector<std::vector<int>> spc_encode_as_ids(SEXP model, const std::vector<std::string>& x);
RcppExport SEXP _sentencepiece_spc_encode_as_ids(SEXP modelSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(spc_encode_as_ids(model, x));
    return rcpp_result_gen;
END_RCPP
}
// spc_decode_ids
std::string spc_decode_ids(SEXP model, const std::vector<int>& x);
RcppExport SEXP _sentencepiece_spc_decode_ids(SEXP modelSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(spc_decode_ids(model, x));
    return rcpp_result_gen;
END_RCPP
}
// spc_decode_subwords
std::string spc_decode_subwords(SEXP model, const std::vector<std::string>& x);
RcppExport SEXP _sentencepiece_spc_decode_subwords(SEXP modelSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(spc_decode_subwords(model, x));
    return rcpp_result_gen;
END_RCPP
}
// wordpiece_encode_as_subwords
Rcpp::StringVector wordpiece_encode_as_subwords(std::string x, std::vector<std::string> vocabulary, std::string unk_token, unsigned int max_input_chars_per_word);
RcppExport SEXP _sentencepiece_wordpiece_encode_as_subwords(SEXP xSEXP, SEXP vocabularySEXP, SEXP unk_tokenSEXP, SEXP max_input_chars_per_wordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type vocabulary(vocabularySEXP);
    Rcpp::traits::input_parameter< std::string >::type unk_token(unk_tokenSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type max_input_chars_per_word(max_input_chars_per_wordSEXP);
    rcpp_result_gen = Rcpp::wrap(wordpiece_encode_as_subwords(x, vocabulary, unk_token, max_input_chars_per_word));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sentencepiece_spc_train", (DL_FUNC) &_sentencepiece_spc_train, 1},
    {"_sentencepiece_spc_load_model", (DL_FUNC) &_sentencepiece_spc_load_model, 1},
    {"_sentencepiece_spc_encode_as_subwords", (DL_FUNC) &_sentencepiece_spc_encode_as_subwords, 2},
    {"_sentencepiece_spc_encode_as_ids", (DL_FUNC) &_sentencepiece_spc_encode_as_ids, 2},
    {"_sentencepiece_spc_decode_ids", (DL_FUNC) &_sentencepiece_spc_decode_ids, 2},
    {"_sentencepiece_spc_decode_subwords", (DL_FUNC) &_sentencepiece_spc_decode_subwords, 2},
    {"_sentencepiece_wordpiece_encode_as_subwords", (DL_FUNC) &_sentencepiece_wordpiece_encode_as_subwords, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_sentencepiece(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
